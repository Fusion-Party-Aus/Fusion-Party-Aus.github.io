// This will be compiled to style.css. Please treat this file (style.scss) as the source file.
// The compiled style.css should be treated as a build artifact. It is only being kept in git because
// the site is being hosted through GitHub Pages.

:root {
  // Solarized colors, designed for beautiful reading: https://ethanschoonover.com/solarized/
  --base03: #002b36;
  --base02: #073642;
  --base01: #586e75;
  --base00: #657b83;
  --base0: #839496;
  --base1: #93a1a1;
  --base2: #eee8d5;
  --base3: #fdf6e3;
  --violet: #6c71c4;
  --blue: #268bd2;
  --cyan: #2aa198;
  --green: #859900;
  // Pastel themes
  --pastel-pink-solid: rgba(246, 226, 249, 1);
  --pastel-pink-transparent: rgba(246, 226, 249, 0.7);
  --coral-solid: rgba(233,190,204,1);
  --coral-transparent: rgba(233,190,204,0.6);
  --neon-pink: rgba(248, 151, 233, 0.82);
  --underground-primary: #B62CABFF;
  --underground-secondary: #411640;  // Sub-headings
  --underground-link: #264E73;
  --underground-tertiary-solid: #ABB2E3;
  --underground-tertiary-transparent: rgba(171,178,227,0.7);
  --underground-text: #080305;
  --underground-text-backing: rgba(217, 208, 248, 0.6);
  --underground-text-contrast-backing: rgba(217, 208, 248, 0.87);
  --underground-background: #f2e3ff;
  --underground-white: #fcf8ff;
  // Previous Fusion colours
  --fusion-aqua: #5effd8;
  --fusion-green: #008c65; // This complements aqua
  --fusion-blue: #5facff;
  --fusion-dark-blue: #3d4dcb; // This complements blue
  --fusion-eggplant: #9954bb;
  --fusion-darker-eggplant: #8542a7; // This complements eggplant
  --fusion-hot-pink: #ff7fff;
  --fusion-purple: #8a16a7; // This complements hot pink
  --fusion-logo-purple: #C926F2;
  // z layers
  --z-text: 4; // Above the hero-background
}


body, html {
  margin: 0; // Reset this in case the user's stylesheet wants to interfere
  padding: 0;
  box-sizing: border-box;

  overflow-x: hidden; // Prevent horizontal scrolling
  font-family: Arial, sans-serif;
  font-size: 18px;
  height: 100%;
  color: var(--underground-text);
}


.back-pane {
  // todo: calm gradient animations? https://codepen.io/TWilson/pen/jOdWqbZ
  position: relative;
  background-color: var(--underground-background);
  z-index: 0; // By definition, this should be behind everything else.
}

b {
  color: var(--base01);
}

h1, h2, h3, h4, h4, h5, h6 {
  color: var(--underground-primary);

  a {
    color: inherit;
    text-decoration: none; // Remove underline from links
  }
}

.hero-background {
  position: relative;
  background-image: // top and bottom: start violet at 0, then transparent at 20%.
          linear-gradient(to bottom, rgba(236,201,252,0.7) -5%, transparent 20%,
                  transparent 80%, rgba(9, 93, 64, 0.38) 105%),
          linear-gradient(to right, var(--pastel-pink-solid) -5%, transparent 3%,
                  transparent 97%, var(--pastel-pink-solid) 105%), // left and right
          url('images/forest portal.webp');
  // If we wanted a parallax look, we'd say background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; // Cover the viewport
  z-index: 2; // Keep a low z-index so the glow and content ends up above this.

  &:before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: inherit; // Inherit the background from the parent
    z-index: 3; // Sit on top of the hero image, but below the content
    border-radius: 15px; // Rounded corners for the mask
    background-clip: padding-box; // Prevent background from bleeding into the border
  }
}

.rounded {
  // The old Fusion site had a border-radius of 30px, for a pill shape.
  border-radius: 15px;

  img {
    border-radius: 15px;
  }
}

.v-rounded {
  border-radius: 0.75em;
}

header {
  position: relative;
  text-align: left;
  padding: 4vw;
  overflow: hidden;
  z-index: var(--z-text);

  &:after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    pointer-events: none; // Ensure the overlay doesn't interfere with clicking/header content
    z-index: 3; // After-glow
  }

  * {
    position: relative;
    z-index: var(--z-text); // Above the after-glow.
  }

  h1, .h1 {
    margin-top: 40px;
    margin-left: 40px;
    font-size: 2.5em;
    display: block;  // Force other elements onto another line
  }

  img.h1 {
    margin-left: 0;
    margin-bottom: 1vh;
    min-width: 300px;
    width: 50%;
    max-width: 700px;
  }

  h2 {
    margin-left: 20px;
  }

  p {
    margin-top: #{min(1.5vw, 15px)};
    font-size: 1em;
  }
}

.neon-pink-border {
  box-sizing: content-box;   // Padding and border are added to the width and height of the element
  display: inline;  // Shrink-wrap

  &:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -3px;
    width: 100%; /* Full width of the parent */
    height: 3px; /* Same height as your border */
    border-radius: 15px;
    background-color: var(--neon-pink); /* The color of your 'neon' glow */
    box-shadow:
            // x, y, blur-radius, color
            0 0 5px var(--neon-pink);
    animation: neon-pink-glow 5s ease-in-out infinite alternate;
  }
}

.neon-pink-glow {
  &:hover {
      animation: neon-pink-glow 5s ease-in-out infinite alternate;
  }
}

nav {
  display: flex;
  justify-content: space-between; // This will space out the nav-left and nav-right
  padding-top: 20px;

  ul {
    list-style: none; // Remove bullets
    padding: 15px;
    border-radius: 15px;
    background-color: rgba(230, 202, 243, 0.4);

    li {
      display: inline; // Horizontal list
      margin-right: 20px;
      padding: 7px;
      border-radius: 15px;
      transition: background-color 0.00s ease-in-out, transform 0.4s ease-in-out; // Animate the background color and transform properties

      a {
        text-decoration: none; // Remove underline from links
        color: var(--underground-white);
        font-weight: bold; // Add emphasis
      }
    }
  }
}

header {
  h1 {
    color: var(--underground-white);
  }
  ul.inline-list {
    margin-left: 2vw;
    box-sizing: content-box;  /* Padding and border are added to the width and height of the element */
    display: inline; // Shrink-wrap
    list-style-type: none;  /* Removes default bullets */
    padding: 0;  /* Removes default padding */
    color: var(--underground-white);
  }

  .text {
    padding: 5px;
    border-radius: 15px;
    font-weight: bold; // Add emphasis
  }

  ul.inline-list li {
    display: inline-block;  /* Displays list items inline */
    margin-right: 0;  /* Adjusts space between items */
    margin-top: 1vh;
    margin-bottom: 1vh;
  }

  ul.inline-list li:last-child::after {
      content: ""; /* Removes dot after the last item */
  }

  li {
    &:hover {
      cursor: pointer;
      background-color: var(--underground-text-backing);
    }
  }
}

.d-flex {
    display: flex; /* This will enable flexbox for the container */
    flex-wrap: wrap; /* This allows items to wrap onto the next line if there's not enough space */
    justify-content: space-between;

    div {
      min-width: 300px;
      max-width: 700px;
      flex: 1;
    }
}

header .d-flex {
  margin-top: 1.5vh;
}

.flex-row {
    flex-direction: row; /* This will arrange flex items in a row */
}

.align-self-start {
    align-self: flex-start; /* Aligns the item to the start of the flex container */
}

.align-self-end {
    align-self: flex-end; /* Aligns the item to the end of the flex container */
}

.sunk {
  // With a wide row, we ensure it appears a bit below the first item. With a narrow row that wraps below,
  // it results in a large gap below the above item. Either way, we ensure a large part of the background image
  // remains visible, even if the screen shrinks.
  margin-top: 6vh;
}

section {
  padding-top: 5px;
  // // Notice that this can overlap on the edges, so the browser window doesn't have a smooth vertical line of fading
  margin: 20px 0;
  text-align: center;
}

.form {
  min-width: 300px;
  max-width: 500px;
}

.inputBx {
  padding: 0.2vh 1vw;
}

.centered {
  display: flex;
  justify-content: center;
  align-items: center;
}

.colored-backing {
  z-index: var(--z-text); // Above
  color: var(--underground-secondary);
  // Notice that the background color has transparency, so for colored-backing outside the header, you might prefer to
  // adjust the underground-background-color, which will be shining through.
  background-color: var(--underground-text-backing);
  text-align: center;
}

.hero-background .colored-backing {
  // The colored backing is partially transparent, so if there's an image behind it, we'll enhance the contrast while
  // people are reading.
  &:hover {
    background-color: var(--underground-text-contrast-backing);
  }
}

.content {
  .colored-backing {
    box-shadow:
            // x, y, blur-radius, color
            0 0 40px rgba(158, 243, 220, 0.2),
            0 0 50px rgba(158, 243, 220, 0.2),
            0 0 75px rgba(158, 243, 220, 0.2);
  }
}

.video {
  display: grid;
  place-items: center;
  padding: #{min(2vw, 15px)}; // Same width all around the image, for a nice frame. Tighter as the screen shrinks
  margin: #{min(2.5vw, 15px)};
  width: 80%;  // Try to make the video large, but if the screen is already large, limit it to 560px
  max-width: #{max(70vw, 560px)};

  iframe {
    // iframe gets replaced, so it can't have :before/:after elements or anything above it.
    // The aspect ratio is taken from the width and height suggested when copying the embedding HTML from
    // YouTube. Either the height or ratio must be set explicitly, as the iframe has no inherent, native height.
    width: 100%;
    aspect-ratio: 560/315;
    height: auto;
  }
}

.bg-gradient {
  background-image: linear-gradient(to bottom, #e6d2ff -5%, transparent 20%,
          transparent 80%, #e6d2ff 105%),
    // By having dark edges, notice that it looks like a curved screen.
  linear-gradient(to right, var(--violet) -5%, transparent 3%,
                  transparent 97%, var(--violet) 105%); // left and right
}

.content {
  position: relative;
  z-index: 1; // Now we can have a fade over the top of the background color.
  padding: #{min(2vw, 15px)};
  text-align: left;
}

.cards-gallery-container {
  h2 {
    font-size: 2em;
    margin: 5px 0;
  }

  .gallery {
    display: flex;
    justify-content: space-around;
    margin-top: 20px;
    flex-wrap: wrap;

    .gallery-item {
      width: 30%; // 30% of the size of the parent container
      max-width: 45%;
      height: 200px; // Fixed height for each gallery item
      position: relative; // For potential content overlay
      margin: 18px 1%;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        overflow: hidden;
        margin-bottom: 20px;
      }

      p {
        position: absolute; // Absolute position to overlay on the bottom of the image
        bottom: 10px; // Positioning the text a bit above the bottom of the image
        right: 10px; // Align the text to the right, with some spacing from the edge
        text-align: right;
        display: inline; // Display as inline to shrink-wrap content
        transition: background-color 0.4s ease-in-out, transform 0.4s ease-in-out; // Animate the background color and transform properties
        background-color: var(--coral-transparent);
        color: var(--underground-primary); // Text color for readability
        padding: 5px 10px; // Padding around the text
        border-bottom: 3px solid var(--base3); // Add a solid line below the text for the underline effect
        box-sizing: content-box; // Padding and border are added to the width and height of the element
        max-width: 70%;
      }

      h1, h2, h3, h4, h5, h6, time {
        //position: absolute;
        display: block; // Take up the whole line
        margin: 0;
      }

      // Styles when hovering over the .gallery-item
      &:hover {
        cursor: pointer;

        p {
          color: var(--underground-secondary);
          transform: translateX(-5%); // Reset translation to show the paragraph
        }
      }
    }
  }

  .view-all {
    display: block;
    margin-top: 20px;
    text-decoration: none;
    color: var(--base0);
    border: 2px solid var(--base02);
    padding: #{min(1.5vw, 10px)}, #{min(2.5vw, 20px)};
  }
}

.hover-button {
  // https://codepen.io/Katiae/pen/eWjJaY
  display: block;
  text-align: center;
  text-decoration: none;

  // Button shape & animation
  border-radius: 6px;
  margin: 10px 0;
  padding: 1em 3em;
  background-size: 200% auto;
  color: var(--base3);
  box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);
  background-image: linear-gradient(to right, #895cf2 0%, #ffabf4 50%, #895cf2 100%);
  transition: 0.5s;

  &:hover {
    background-position: right center;
  }

  cursor: pointer;
  border-width: 0;
  max-width: 50%;
}

.ring {
  position: relative;
  width: 50%;
  aspect-ratio: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}

.ring i {
  position: absolute;
  inset: 0;
  border: 2px solid white;
  transition: 0.5s;
}

.ring div {
  position: absolute; // Without this, the items inside the rings will not be selectable
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 20px;
  min-height: 40px;
}

.ring .inputBx {
  position: relative;
  width: 100%;
}

.ring i:nth-child(1) {
  border-radius: 38% 62% 63% 37% / 41% 44% 56% 59%;
  animation: animate1 21s linear infinite;
}

.ring i:nth-child(2) {
  border-radius: 41% 44% 56% 59%/38% 62% 63% 37%;
  animation: animate2 17s linear infinite;
}

.ring i:nth-child(3) {
  border-radius: 41% 44% 56% 59%/38% 62% 63% 37%;
  animation: animate3 20s linear infinite;
}

.ring i:nth-child(4) {
  border-radius: 41% 44% 56% 59%/38% 62% 63% 37%;
  animation: animate4 24s linear infinite;
}

.ring i:nth-child(5) {
  border-radius: 41% 44% 56% 59%/38% 62% 63% 37%;
  animation: animate5 15s linear infinite;
}

.ring:hover i {
  border: 6px solid var(--ring-color);
  filter: drop-shadow(0 0 20px var(--ring-color));
}

@keyframes animate1 {
  0% {
    // These offsets were measured by Owen
    transform: translateX(-26.4px) translateY(-22px) rotate(0deg);
  }
  100% {
    transform: translateX(-26.4px) translateY(-22px) rotate(360deg);
  }
}

@keyframes animate2 {
  0% {
    transform: translateX(-13.2px) translateY(4.5px) rotate(360deg);
  }
  100% {
    transform: translateX(-13.2px) translateY(4.5px) rotate(0deg);
  }
}

@keyframes animate3 {
  0% {
    transform: translateX(-45.2px) translateY(4.6px) rotate(0deg);
  }
  100% {
    transform: translateX(-45.2px) translateY(4.6px) rotate(360deg);
  }
}

@keyframes animate4 {
  0% {
    transform: translateX(-38.2px) translateY(-15.7px) rotate(360deg);
  }
  100% {
    transform: translateX(-38.2px) translateY(-15.7px) rotate(0deg);
  }
}

@keyframes animate5 {
  0% {
    transform: translateX(-17.6px) translateY(-15.3px) rotate(0deg);
  }
  100% {
    transform: translateX(-17.6px) translateY(-15.3px) rotate(360deg);
  }
}


@keyframes neon-pink-glow {
  from {
    box-shadow:
            0 0 10px #fff,
            0 0 20px #fff,
            0 0 30px #fff,
            0 0 40px #F897E9EA,
            0 0 70px #F897E9EA,
            0 0 80px #F897E9EA,
            0 0 100px #F897E9EA,
            0 0 150px #F897E9EA;
  }
  to {
    box-shadow:
            0 0 5px #F897E9EA,
            0 0 10px #F897E9EA,
            0 0 15px #fff,
            0 0 20px #F897E9EA,
            0 0 35px #F897E9EA,
            0 0 40px #F897E9EA,
            0 0 50px #F897E9EA,
            0 0 75px #F897E9EA;
  }
}
